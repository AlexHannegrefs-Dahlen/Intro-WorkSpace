package tic.tac.toe;

import java.io.IOException;

public class Game {

	public static void RunGame() throws IOException {
		boolean gameType = ConsoleUI.promptForBool("One Player or Two Player (1/2)", "1", "2");
		if (!gameType) {
			twoPlayer();
		} else {
			onePlayer();
		}
	}

	public static void onePlayer() throws IOException {
		String[] options = new String[3];
		options[0] = "1: Easy";
		options[1] = "2: Medium";
		options[2] = "3: Difficult";
		int difficulty = ConsoleUI.promptForMenuSelection(options, false);
		if (difficulty == 1) {
			System.out.println("Easy");
			//runGameModeEasy();
		} else if (difficulty == 2) {
			System.out.println("Medium");
		} else if (difficulty == 3) {
			System.out.println("Hard");
		}
	}

	public static void twoPlayer() throws IOException {
		boolean Play = false;
		String[] options = new String[1];
		options[0] = "1: Play again";
		boolean player = true;
		Play = false;
		Square Square = new Square();
		Square[] squares = Board.makeSquares();
		Player x = makePlayerX();
		//Player o = makePlayerO();
		Board.printGameBoard(squares);
		do {
			if (player == true) {
				x.marker = 'X';
				selectSquare(x, squares, Square);
				Board.printGameBoard(squares);
				Play = JasonsCode(squares, x, Play);
				player = !player;
			} else {
				x.marker = 'O';
				selectSquare(x, squares, Square);
				Board.printGameBoard(squares);
				Play = JasonsCode(squares, x, Play);
				player = !player;
			}
		} while (!Play);
		int UserSelect = ConsoleUI.promptForMenuSelection(options, true);
		if (UserSelect == 1) {
			RunGame();
		} else {
			System.out.println("Quitting");
		}
	}

	public static boolean JasonsCode(Square[] squares, Player Turn, boolean play) {

		if (((squares[1].SpaceMarker) == 'x' && (squares[2].SpaceMarker) == 'x'
				&& (squares[3].SpaceMarker) == 'x')
				|| ((squares[1].SpaceMarker) == 'o' && (squares[2].SpaceMarker) == 'o'
						&& (squares[3].SpaceMarker) == 'o')) {// Top
																	// line
			if ((squares[1].SpaceMarker) == 'x') {
				System.out.println("Player X Wins");
				play = true;
			}
			if ((squares[1].SpaceMarker) == 'o') {
				System.out.println("Player O Wins");
				play = true;
			}
		}
		if (((squares[1].SpaceMarker) == 'x' && (squares[4].SpaceMarker) == 'x'
				&& (squares[7].SpaceMarker) == 'x')
				|| ((squares[1].SpaceMarker) == 'o' && (squares[4].SpaceMarker) == 'o'
						&& (squares[7].SpaceMarker) == 'o')) {// Left
																	// side
			if ((squares[1].SpaceMarker) == 'x') {
				System.out.println("Player X Wins");
				play = true;
			}
			if ((squares[1].SpaceMarker) == 'o') {
				System.out.println("Player O Wins");
				play = true;
			}
		}
		if (((squares[7].SpaceMarker) == 'x' && (squares[8].SpaceMarker) == 'x'
				&& (squares[9].SpaceMarker) == 'x')
				|| ((squares[7].SpaceMarker) == 'o' && (squares[8].SpaceMarker) == 'o'
						&& (squares[9].SpaceMarker) == 'o')) {// Bottom
																	// Line
			if ((squares[7].SpaceMarker) == 'x') {
				System.out.println("Player X Wins");
				play = true;
			}
			if ((squares[7].SpaceMarker) == 'o') {
				System.out.println("Player O Wins");
				play = true;
			}
		}
		if (((squares[2].SpaceMarker) == 'x' && (squares[5].SpaceMarker) == 'x'
				&& (squares[8].SpaceMarker) == 'x')
				|| ((squares[2].SpaceMarker) == 'o' && (squares[5].SpaceMarker) == 'o'
						&& (squares[8].SpaceMarker) == 'o')) {// Middle
																	// Vert.
																	// Line
			if ((squares[2].SpaceMarker) == 'x') {
				System.out.println("Player X Wins");
				play = true;
			}
			if ((squares[2].SpaceMarker) == 'o') {
				System.out.println("Player O Wins");
				play = true;
			}
		}
		if (((squares[4].SpaceMarker) == 'x' && (squares[5].SpaceMarker) == 'x'
				&& (squares[6].SpaceMarker) == 'x')
				|| ((squares[4].SpaceMarker) == 'o' && (squares[5].SpaceMarker) == 'o'
						&& (squares[6].SpaceMarker) == 'o')) {// Middle
																	// Hort.
																	// Line
			if ((squares[4].SpaceMarker) == 'x') {
				System.out.println("Player X Wins");
				play = true;
			}
			if ((squares[4].SpaceMarker) == 'o') {
				System.out.println("Player O Wins");
				play = true;
			}
		}
		if (((squares[3].SpaceMarker) == 'x' && (squares[6].SpaceMarker) == 'x'
				&& (squares[9].SpaceMarker) == 'x')
				|| ((squares[3].SpaceMarker) == 'o' && (squares[6].SpaceMarker) == 'o'
						&& (squares[9].SpaceMarker) == 'o')) {// Right
																	// Line
			if ((squares[3].SpaceMarker) == 'x') {
				System.out.println("Player X Wins");
				play = true;
			}
			if ((squares[3].SpaceMarker) == 'o') {
				System.out.println("Player O Wins");
				play = true;
			}
		}
		if (((squares[1].SpaceMarker) == 'x' && (squares[5].SpaceMarker) == 'x'
				&& (squares[9].SpaceMarker) == 'x')
				|| ((squares[1].SpaceMarker) == 'o' && (squares[5].SpaceMarker) == 'o'
						&& (squares[9].SpaceMarker) == 'o')) {// Top-L--Bottom-R
			if ((squares[1].SpaceMarker) == 'x') {
				System.out.println("Player X Wins");
				play = true;
			}
			if ((squares[1].SpaceMarker) == 'o') {
				System.out.println("Player O Wins");
				play = true;
			}
		}
		if (((squares[7].SpaceMarker) == 'x' && (squares[5].SpaceMarker) == 'x'
				&& (squares[3].SpaceMarker) == 'x')
				|| ((squares[7].SpaceMarker) == 'o' && (squares[5].SpaceMarker) == 'o'
						&& (squares[3].SpaceMarker) == 'o')) {// Bottom-L--Top-R
			if ((squares[3].SpaceMarker) == 'x') {
				System.out.println("Player X Wins");
				play = true;
			}
			if ((squares[3].SpaceMarker) == 'o') {
				System.out.println("Player O Wins");
				play = true;
			}
		}
		return play;
	}

	public static void selectSquare(Player X_O, Square[] squares, Square Set) throws IOException {
		boolean valid = true;
		do {
			valid = true;
			int selection = ConsoleUI.promptForInt("Player " + X_O.marker + " Select Square", 1, 9);

			if (squares[selection].SpaceMarker != 'x' && squares[selection].SpaceMarker != 'o') {

				Set.SpaceMarker = X_O.marker;
				squares[selection] = Set;
					
			} else {
				System.out.println("Already Taken");
				valid = false;
			}
		} while (!valid);
	}

	public static Player makePlayerX() {
		Player x = new Player();
		x.marker = 'x';
		return x;
	}

	/*public static Player makePlayerO() {
		Player o = new Player();
		o.marker = 'o';
		return o;
	}*/

}
