package alex.winter_break.test;

import java.io.IOException;

public class Fraction {

	private static int numerator = 0;
	private static int denominator = 0;
	private static int numerator2 = 0;
	private static int denominator2 = 0;

	public static void getFraction1() throws IOException {
		String numeratorAsAString = null;
		String denominatorAsAString = null;
		String userEnteredFraction = ConsoleUI.promptForInput("Enter fraction", false);
		int divideSign = 0;

		divideSign = userEnteredFraction.indexOf("/");

		try {
			numeratorAsAString = userEnteredFraction.substring(0, divideSign);
		} catch (Exception e) {
			System.out.println("Must enter a number before and after a /");
			return;
		}
		try {
			denominatorAsAString = userEnteredFraction.substring(divideSign + 1, userEnteredFraction.length());
		} catch (Exception e) {
			System.out.println("Must enter a number before and after a /");
			return;
		}

		try {
			numerator = Integer.parseInt(numeratorAsAString);
		} catch (Exception e) {
			System.out.println("Something got messed up");
			return;
		}
		try {
			denominator = Integer.parseInt(denominatorAsAString);
		} catch (Exception e) {
			System.out.println("Something got messed up");
			return;
		}
	}

	public static void getFraction2() throws IOException {
		String numeratorAsAString = null;
		String denominatorAsAString = null;
		String userEnteredFraction = ConsoleUI.promptForInput("Enter fraction", false);
		int divideSign = 0;

		divideSign = userEnteredFraction.indexOf("/");

		try {
			numeratorAsAString = userEnteredFraction.substring(0, divideSign);
		} catch (Exception e) {
			System.out.println("Must enter a number before and after a /");
			return;
		}
		try {
			denominatorAsAString = userEnteredFraction.substring(divideSign + 1, userEnteredFraction.length());
		} catch (Exception e) {
			System.out.println("Must enter a number before and after a /");
			return;
		}

		try {
			numerator2 = Integer.parseInt(numeratorAsAString);
		} catch (Exception e) {
			System.out.println("Something got messed up");
			return;
		}
		try {
			denominator2 = Integer.parseInt(denominatorAsAString);
		} catch (Exception e) {
			System.out.println("Something got messed up");
			return;
		}
	}

	public static void fractionMenu() throws IOException {
		String[] options = new String[] { "Reduce", "Decimal", "Add", "Subtract", "Multiply", "Divide" };
		int menuSelect = ConsoleUI.promptForMenuSelection(options, false);
		if (menuSelect == 1 || menuSelect == 2) {
			getFraction1();
		} else {
			getFraction1();
			getFraction2();
		}
		if (menuSelect == 1) {
			System.out.println(reduce(numerator, denominator));
		} else if (menuSelect == 2) {
			System.out.println(decimal());
		} else if (menuSelect == 3) {
			System.out.println(add());
		} else if (menuSelect == 4) {
			System.out.println(subtract());
		} else if (menuSelect == 5) {
			System.out.println(multiply());
		} else if (menuSelect == 6) {
			System.out.println(divide());
		}
	}

	private static String add() {
		int saveddenominator = denominator;
		int saveddenominator2 = denominator2;
		numerator = numerator * saveddenominator2;
		numerator2 = numerator2 * saveddenominator;
		denominator = saveddenominator * saveddenominator2;
		denominator2 = denominator;
		int finalnumerator = numerator + numerator2;
		int finaldenominator = denominator;
		String add = reduce(finalnumerator, finaldenominator);
		return add;
	}

	private static String subtract() {
		int saveddenominator = denominator;
		int saveddenominator2 = denominator2;
		numerator = numerator * saveddenominator2;
		numerator2 = numerator2 * saveddenominator;
		denominator = saveddenominator * saveddenominator2;
		denominator2 = denominator;
		int finalnumerator = numerator - numerator2;
		int finaldenominator = denominator;
		String subtract = reduce(finalnumerator, finaldenominator);
		return subtract;
	}

	private static String multiply() {
		int numerator3 = numerator * numerator2;
		int denominator3 = denominator * denominator2;
		String multiply = reduce(numerator3, denominator3);
		return multiply;
	}

	private static String divide() {
		int numerator3 = numerator * denominator2;
		int denominator3 = denominator * numerator2;
		String divide = reduce(numerator3, denominator3);
		return divide;
	}

	private static double decimal() {
		return (double) numerator / denominator;
	}

	private static String reduce(int num, int den) {
		int gcm = gcm(num, den);
		return (num / gcm) + "/" + (den / gcm);
	}

	public static int gcm(int a, int b) {
		return b == 0 ? a : gcm(b, a % b);
	}

}
